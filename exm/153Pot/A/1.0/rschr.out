===============================================================================
 RRRRR  SSSSS  H   H  RRRRR    Zbigniew ROMANOWSKI                             
 R   R  S      H   H  R   R                                                    
 RRRRR  SSSSS  HHHHH  RRRRR    version: 5.9                                    
 R  R       S  H   H  R  R                                                     
 R   R  SSSSS  H   H  R   R    compilation date: Jan  5 2013 (08:51:25)                       
===============================================================================

Start of calculation: Sun Jan  6 11:04:59 2013

PEs = 4

----INITIALIZATION----========================================================
DOMAIN:
    BsplDeg = 3, CubatOrder = 6, CubatNodeNo = 216
    h = 1.000000E+00
    Nx = 45,    Ny = 45,   Nz = 45
    X0 = -2.000000E+01,    Xmax = 2.500000E+01
    Y0 = -2.000000E+01,    Ymax = 2.500000E+01
    Z0 = -2.000000E+01,    Zmax = 2.500000E+01

NUMBER OF 'ATOMS' = 125
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 0.00, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 0.00, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 0.00, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 0.00, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 0.00, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 1.30, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 1.30, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 1.30, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 1.30, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 1.30, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 2.60, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 2.60, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 2.60, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 2.60, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 2.60, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 3.90, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 3.90, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 3.90, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 3.90, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 3.90, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 5.20, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 5.20, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 5.20, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 5.20, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 0.00, 5.20, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 0.00, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 0.00, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 0.00, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 0.00, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 0.00, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 1.30, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 1.30, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 1.30, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 1.30, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 1.30, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 2.60, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 2.60, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 2.60, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 2.60, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 2.60, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 3.90, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 3.90, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 3.90, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 3.90, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 3.90, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 5.20, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 5.20, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 5.20, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 5.20, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 1.30, 5.20, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 0.00, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 0.00, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 0.00, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 0.00, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 0.00, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 1.30, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 1.30, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 1.30, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 1.30, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 1.30, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 2.60, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 2.60, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 2.60, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 2.60, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 2.60, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 3.90, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 3.90, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 3.90, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 3.90, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 3.90, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 5.20, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 5.20, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 5.20, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 5.20, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 2.60, 5.20, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 0.00, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 0.00, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 0.00, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 0.00, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 0.00, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 1.30, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 1.30, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 1.30, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 1.30, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 1.30, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 2.60, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 2.60, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 2.60, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 2.60, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 2.60, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 3.90, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 3.90, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 3.90, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 3.90, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 3.90, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 5.20, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 5.20, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 5.20, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 5.20, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 3.90, 5.20, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 0.00, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 0.00, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 0.00, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 0.00, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 0.00, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 1.30, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 1.30, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 1.30, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 1.30, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 1.30, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 2.60, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 2.60, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 2.60, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 2.60, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 2.60, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 3.90, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 3.90, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 3.90, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 3.90, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 3.90, 5.20)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 5.20, 0.00)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 5.20, 1.30)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 5.20, 2.60)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 5.20, 3.90)
    Soft-r^4(d,a)=(-2.00, 0.10) at (x,y,z) = ( 5.20, 5.20, 5.20)


----GRAPH-CREATION-and-PARTITIONING----=======================================
      Setup: Max:   0.230, Sum:   0.920, Balance:   1.000
   Matching: Max:   0.081, Sum:   0.325, Balance:   1.000
Contraction: Max:   0.120, Sum:   0.479, Balance:   1.000
   InitPart: Max:   0.038, Sum:   0.151, Balance:   1.000
    Project: Max:   0.000, Sum:   0.002, Balance:   1.145
 Initialize: Max:   0.086, Sum:   0.343, Balance:   1.002
      K-way: Max:   0.163, Sum:   0.652, Balance:   1.000
      Remap: Max:   0.000, Sum:   0.000, Balance:   1.006
      Total: Max:   0.718, Sum:   2.873, Balance:   1.000
Final   4-way Cut: 948106 	Balance: 1.031 

    Number of nodes:
         Rank0.........1.872E+04
         Averg.........1.852E+04
         Total.........7.409E+04
    Number of edges:
         Rank0.........5.636E+06
         Averg.........5.588E+06
         Total.........2.235E+07
    Memory usage.[MB]:
         Rank0.........8.629E+01
         Averg.........8.555E+01
         Total.........3.422E+02


----MATRIX-ALLOCATION----=====================================================
    Dimension of matrix H or S:
              Rank0..............1.872E+04 (18718)
              Averg..............1.852E+04       
              Total..............7.409E+04 (74088)
    Nonzero entries in H or S:
              Rank0..............5.655E+06 (5654791)
              Averg..............5.606E+06       
              Total..............2.243E+07 (22425768)
    Sparseness of H or S (fraction):
              Rank0..............4.078E-03
              Averg..............4.086E-03
    Sparseness of H or S (non-zero elemnts in a row):
              Rank0..............302.1
              Averg..............302.7
    Memory usage for H and S [MiB]:
              Rank0..............1.726E+02
              Averg..............1.711E+02
              Total..............6.844E+02


----ASSEMBLING----============================================================
..........10..........20..........30..........40..........50done
Assembling time = 33 [s]



----SOLVING----===============================================================
[0]PCSetData_AGG bs=1 MM=18718
EPS Object: 4 MPI processes
  type: krylovschur
    Krylov-Schur: 50% of basis vectors kept after restart
  problem type: generalized symmetric eigenvalue problem
  extraction type: Rayleigh-Ritz
  selected portion of the spectrum: smallest real parts
  number of eigenvalues (nev): 10
  number of column vectors (ncv): 50
  maximum dimension of projected problem (mpd): 50
  maximum number of iterations: 500
  tolerance: 0.0001
  convergence test: relative to the eigenvalue
  estimates of matrix norms (constant): norm(A)=1, norm(B)=1
IP Object: 4 MPI processes
  type: bilinear
  orthogonalization method: classical Gram-Schmidt
  orthogonalization refinement: if needed (eta: 0.7071)
  Matrix Object:   4 MPI processes
    type: mpiaij
    rows=74088, cols=74088
    total: nonzeros=22425768, allocated nonzeros=22425768
    total number of mallocs used during MatSetValues calls =0
      not using I-node (on process 0) routines
DS Object: 4 MPI processes
  type: hep
  solving the problem with: Implicit QR method (_steqr)
ST Object: 4 MPI processes
  type: shift
  shift: 0
  matrices A and B have same nonzero pattern
  KSP Object:  (st_)   4 MPI processes
    type: cg
    maximum iterations=10000
    using preconditioner applied to right hand side for initial guess
    tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
    left preconditioning
    using nonzero initial guess
    using PRECONDITIONED norm type for convergence test
  PC Object:  (st_)   4 MPI processes
    type: gamg
      MG: type is MULTIPLICATIVE, levels=3 cycles=v
        Cycles per PCApply=1
        Using Galerkin computed coarse grid matrices
    Coarse grid solver -- level -------------------------------
      KSP Object:      (st_mg_coarse_)       4 MPI processes
        type: gmres
          GMRES: restart=30, using Classical (unmodified) Gram-Schmidt Orthogonalization with no iterative refinement
          GMRES: happy breakdown tolerance 1e-30
        maximum iterations=1, initial guess is zero
        tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
        left preconditioning
        using NONE norm type for convergence test
      PC Object:      (st_mg_coarse_)       4 MPI processes
        type: bjacobi
          block Jacobi: number of blocks = 4
          Local solve info for each block is in the following KSP and PC objects:
        [0] number of local blocks = 1, first local block number = 0
                      KSP Object:          (st_mg_coarse_sub_)            KSP Object:          (st_mg_coarse_sub_)           1 MPI processes
    KSP Object:          (st_mg_coarse_sub_)           1 MPI processes
                 1 MPI processes
            type: preonly
            maximum iterations=10000, initial guess is zero
                type: preonly
            maximum iterations=10000, initial guess is zero
            type: preonly
            maximum iterations=10000, initial guess is zero
                tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
        tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
            left preconditioning
      left preconditioning
            using DEFAULT norm type for convergence test
          tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
            left preconditioning
            using DEFAULT norm type for convergence test
          PC Object:          (st_mg_coarse_sub_)            using DEFAULT norm type for convergence test
          PC Object:          (st_mg_coarse_sub_)      PC Object:          (st_mg_coarse_sub_)                   1 MPI processes
            type: lu
               1 MPI processes
            type: lu
           1 MPI processes
            type: lu
          LU: out-of-place factorization
              tolerance for zero pivot 2.22045e-14
        LU: out-of-place factorization
              tolerance for zero pivot 2.22045e-14
                LU: out-of-place factorization
                      matrix ordering: nd
            linear system matrix = precond matrix:
            Matrix Object:        matrix ordering: nd
            linear system matrix = precond matrix:
            Matrix Object:        tolerance for zero pivot 2.22045e-14
              matrix ordering: nd
            linear system matrix = precond matrix:
             1 MPI processes
              type: seqaij
                     1 MPI processes
              type: seqaij
                          Matrix Object:             1 MPI processes
              rows=0, cols=0
              total: nonzeros=0, allocated nonzeros=0
              rows=0, cols=0
              total: nonzeros=0, allocated nonzeros=0
              total number of mallocs used during MatSetValues calls =0
  type: seqaij
              rows=0, cols=0
              total: nonzeros=0, allocated nonzeros=0
  total number of mallocs used during MatSetValues calls =0
                not using I-node routines
                not using I-node routines
            total number of mallocs used during MatSetValues calls =0
                not using I-node routines
        [0] local block number 0
          KSP Object:          (st_mg_coarse_sub_)           1 MPI processes
            type: preonly
            maximum iterations=10000, initial guess is zero
            tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
            left preconditioning
            using DEFAULT norm type for convergence test
          PC Object:          (st_mg_coarse_sub_)           1 MPI processes
            type: lu
              LU: out-of-place factorization
              tolerance for zero pivot 2.22045e-14
              matrix ordering: nd
            linear system matrix = precond matrix:
            Matrix Object:             1 MPI processes
              type: seqaij
              rows=267, cols=267
              total: nonzeros=4621, allocated nonzeros=4621
              total number of mallocs used during MatSetValues calls =0
                not using I-node routines
          - - - - - - - - - - - - - - - - - -
        [1] number of local blocks = 1, first local block number = 1
          [1] local block number 0
          - - - - - - - - - - - - - - - - - -
        [2] number of local blocks = 1, first local block number = 2
          [2] local block number 0
          - - - - - - - - - - - - - - - - - -
        [3] number of local blocks = 1, first local block number = 3
          [3] local block number 0
          - - - - - - - - - - - - - - - - - -
        linear system matrix = precond matrix:
        Matrix Object:         4 MPI processes
          type: mpiaij
          rows=267, cols=267
          total: nonzeros=4621, allocated nonzeros=4621
          total number of mallocs used during MatSetValues calls =0
            not using I-node (on process 0) routines
    Down solver (pre-smoother) on level 1 -------------------------------
      KSP Object:      (st_mg_levels_1_)       4 MPI processes
        type: chebyshev
          Chebyshev: eigenvalue estimates:  min = 0.299177, max = 2.08953
        maximum iterations=2
        tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
        left preconditioning
        using nonzero initial guess
        using NONE norm type for convergence test
      PC Object:      (st_mg_levels_1_)       4 MPI processes
        type: jacobi
        linear system matrix = precond matrix:
        Matrix Object:         4 MPI processes
          type: mpiaij
          rows=1776, cols=1776
          total: nonzeros=63576, allocated nonzeros=63576
          total number of mallocs used during MatSetValues calls =0
            not using I-node (on process 0) routines
    Up solver (post-smoother) same as down solver (pre-smoother)
    Down solver (pre-smoother) on level 2 -------------------------------
      KSP Object:      (st_mg_levels_2_)       4 MPI processes
        type: chebyshev
          Chebyshev: eigenvalue estimates:  min = 0.216238, max = 9.47165
        maximum iterations=2
        tolerances:  relative=1e-05, absolute=1e-50, divergence=10000
        left preconditioning
        using nonzero initial guess
        using NONE norm type for convergence test
      PC Object:      (st_mg_levels_2_)       4 MPI processes
        type: jacobi
        linear system matrix = precond matrix:
        Matrix Object:         4 MPI processes
          type: mpiaij
          rows=74088, cols=74088
          total: nonzeros=22425768, allocated nonzeros=22425768
          total number of mallocs used during MatSetValues calls =0
            not using I-node (on process 0) routines
    Up solver (post-smoother) same as down solver (pre-smoother)
    linear system matrix = precond matrix:
    Matrix Object:     4 MPI processes
      type: mpiaij
      rows=74088, cols=74088
      total: nonzeros=22425768, allocated nonzeros=22425768
      total number of mallocs used during MatSetValues calls =0
        not using I-node (on process 0) routines


  1 EPS nconv=1 first unconverged value (error) -18.3317 (1.46696165e-04)
  2 EPS nconv=4 first unconverged value (error) -17.571 (1.34497018e-04)
  3 EPS nconv=4 first unconverged value (error) -17.8091 (4.19855009e-02)
  4 EPS nconv=9 first unconverged value (error) -17.0445 (5.96438967e-04)
  5 EPS nconv=9 first unconverged value (error) -17.6065 (1.23616058e-02)
  6 EPS nconv=17 first unconverged value (error) -16.3622 (1.13963128e-04)

--------------------------------------------------------------
    Number of iterations of the method.............6
    Number of linear iterations of the method......13039
    Solution method................................krylovschur
    Number of requested eigenvalues................10
    Stopping condition: eps_tol....................1.000000E-04
    Stopping condition: eps_max_it.................500
--------------------------------------------------------------


             EIGENVALUES            ERROR
====================================================
    0    -1.8870642994E+01     0.0000000000E+00
    1    -1.8332150276E+01     0.0000000000E+00
    2    -1.8331497153E+01     0.0000000000E+00
    3    -1.8331495676E+01     0.0000000000E+00
    4    -1.7806619234E+01     0.0000000000E+00
    5    -1.7805949424E+01     0.0000000000E+00
    6    -1.7805925822E+01     0.0000000000E+00
    7    -1.7570979414E+01     0.0000000000E+00
    8    -1.7552001595E+01     0.0000000000E+00
    9    -1.7551999819E+01     0.0000000000E+00
   10    -1.7293592817E+01     0.0000000000E+00
   11    -1.7045413666E+01     0.0000000000E+00
   12    -1.7039345256E+01     0.0000000000E+00
   13    -1.7028291948E+01     0.0000000000E+00
   14    -1.7022173168E+01     0.0000000000E+00
   15    -1.6532731516E+01     0.0000000000E+00
   16    -1.6516603183E+01     0.0000000000E+00
End of calculation: Sun Jan  6 11:37:17 2013



 CALCULATION TIME = 1938 [seconds] = 0.54 [hours]
